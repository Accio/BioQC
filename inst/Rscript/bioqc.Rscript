#!/bin/tcsh /SOFT/bi/apps/R/bdeRscript

suppressMessages(library(ribiosUtils))
suppressMessages(library(ribiosArg))

infile <- getArg("infile", onlyArg=NULL, missingArg=NULL)
getHelp <- existArg("h") | existArg("help")

if (is.null(infile) || getHelp) {
  qqmsg(paste("Usage:",
              scriptName(),
              "-infile FILE [OPT]\n\n",
              "Mandatory parameters:\n",
              "-infile FILE\tGene expression in GCT or ChipFetcher format\n\n",
              "Optional parameters:\n",
              "-outfile FILE\tOutput file name. Writing to standard output if missing\n",
              "-chiptype TYPE\tChip type supported by GTI. Needed for GCT files\n",
              "-gmt FILE\tUse specified GMT file other than the tissue marker genes provided by the package\n",
              sep=""),
        status=1L)
}

libordie(ribiosIO, minVer="1.0-12")
libordie(ribiosBioQC)
libordie(ribiosExpression)

## Chip type, can be missing. ribiosAnnotation is only needed when chiptype is not GeneSymbol
chiptype <- getArg("chiptype", onlyArg="", missingArg="")
if(chiptype!="GeneSymbol")
  libordie(ribiosAnnotation, minVer="2.0-0")

## infile -> annotated ExpressionSet
if(!file.exists(infile)) {
  qqmsg(paste("ERROR: ", infile, " cannot be found. Program existing.", sep=""), status=1L)
} else {
  if(isGctFile(infile)) {
    eset <- readGct(infile)
    if (chiptype=="GeneSymbol") {
      fData(eset)$GeneSymbol <- featureNames(eset)
    } else if(chiptype=="GeneID") {
      fData(eset) <- annotateGeneIDs(featureNames(eset), orthologue=TRUE, multiOrth=FALSE)
    } else {
      fData(eset) <- annotateProbesets(featureNames(eset), chip=chiptype, orthologue=TRUE)
    }
  } else {
    eset <- ChipFetcher2ExpressionSet(infile, chip=chiptype, orthologue=TRUE)
  }
}

## remove redundant mapping genes
if(all(is.na(fData(eset)$GeneSymbol)))
  qqmsg("ERROR: Probests could not be mapped to GeneSymbols. Please check the chiptype\n", status=2L)
eset <- keepMaxStatProbe(eset, probe.index.name="GeneSymbol", keepNAprobes=FALSE, stat=function(x) mean(x, na.rm=TRUE))

## GMT file
default.gmt <- system.file("/extdata/exp.tissuemark.affy.roche.symbols.gmt",
                           package="ribiosBioQC")
gmtfile <- getArg("gmtfile", onlyArg=default.gmt, missingArg=default.gmt)
gmtList <- read_gmt_list(gmtfile)

## outfile
outfile <- getArg("outfile", onlyArg="", missingArg="")

## logic
mat <- wmwTest(eset, gmtList, alternative="greater", statistic=FALSE)
mat.q <- -log(mat)

## output file
write.table(mat.q, file=outfile, quote=FALSE, sep="\t", col.names=NA)

qqmsg(status=0L)

