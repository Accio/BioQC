%\VignetteIndexEntry{BioQC: The kidney expression example}
%\VignetteDepends{Biobase}
%\VignettePackage{BioQC}

\documentclass[11pt]{article}

\usepackage{times}
\usepackage{hyperref}
\usepackage{geometry}
\usepackage{longtable}
\usepackage[pdftex]{graphicx}
\SweaveOpts{keep.source=TRUE,eps=FALSE,pdf=TRUE,prefix=TRUE,eval=TRUE} 

% R part
\newcommand{\R}[1]{{\textsf{#1}}}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}
\newcommand{\Metas}[1]{{\texttt{#1}}}

\begin{document}
\setkeys{Gin}{width=0.8\textwidth}
\title{Case study of BioQC: detecting tissue heterogeneity in a kidney expression dataset}
\author{Jitao David Zhang}

\maketitle

\begin{abstract}
  In this vignette we demonstrate the use of BioQC by a simulated expression dataset, and compare the performace of Wilcoxon-Mann-Whitney rank sum test algorithm implemented in BioQC to other implementions available in R. To use BioQC, the users only need to provide an expression dataset, in the form of a numeric matrix, or an \textit{ExpressionSet} object. The BioQC package provides tissue-specific genes that can be used directly with the algorithm. The output is one score for each tissue type and each sample. The ranks of the score within each sample can be compared with prior knowledge about the sample to infer tissue heterogeneity. The hypotheses generated by BioQC should be further tested by follow-up experiments.
\end{abstract}

\section{Data read in}

First we load BioQC library and an expression data set into the R session. 

<<dataReadIn>>=
library(Biobase)
library(BioQC)
Nrow <- 2000L
Nsample <- 5L
myEset <- new("ExpressionSet",
              exprs=matrix(rnorm(Nrow*Nsample), nrow=Nrow))
@ 

<<gmtReadin>>=
gmtFile <- system.file("extdata/exp.tissuemark.affy.roche.symbols.gmt", package="BioQC")
gmt <- readGmt(gmtFile)
@ 

<<assignGeneSymbols>>=
fData(myEset)$GeneSymbol <- sample(unlist(sapply(gmt, function(x) x$genes)), Nrow)
@ 

\section{Run BioQC}
<<runBioQC>>=
system.time(bioqcRes <- wmwTest(myEset, gmt, 
                                alternative="greater"))
bioqcResFil <- filterPmat(bioqcRes, 1E-5)
@ 

\section{Results visualization}

\section{Biological validation}

\section{Session Info}
The script runs within the following session:
<<sessionInfo, echo=FALSE, results=verbatim>>=
sessionInfo()
@ 

\end{document}
